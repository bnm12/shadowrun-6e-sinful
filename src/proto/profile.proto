syntax = "proto3";

package shadowrun.profile;

// Enum for gender options
enum Gender {
  GENDER_UNSPECIFIED = 0;
  GENDER_MALE = 1;
  GENDER_FEMALE = 2;
  GENDER_DIVERSE = 3;
}

// Enum for SIN quality levels
enum SinQuality {
  SIN_QUALITY_UNSPECIFIED = 0;
  SIN_QUALITY_LEVEL_1 = 1;
  SIN_QUALITY_LEVEL_2 = 2;
  SIN_QUALITY_LEVEL_3 = 3;
  SIN_QUALITY_LEVEL_4 = 4;
  SIN_QUALITY_LEVEL_5 = 5;
  SIN_QUALITY_LEVEL_6 = 6;
}

// Basic profile information (Level 1)
message ProfileBasic {
  string name = 1;
  Gender gender = 2;
  string nationality = 3;  // ShadowrunNationalityType as string
  string metatype = 4;     // ShadowrunMetatypeType as string, can be "N/A"
  string photo = 5;        // Base64 encoded image or file path
}

// Identity information (Level 2)
message ProfileIdentity {
  string address = 1;
  string city = 2;
  string country = 3;
  string birthdate = 4;    // ISO 8601 date string (YYYY-MM-DD)
}

// Physical characteristics (Level 3)
message ProfilePhysical {
  int32 height = 1;        // Height in cm
  int32 weight = 2;        // Weight in kg
  string skin = 3;
  string hair = 4;
  string eyes = 5;
  int32 seed = 6;          // Random seed for generation
}

// Medical information (Level 4)
message ProfileMedical {
  string blood_type = 1;
  int32 seed = 2;          // Random seed for generation
}

// Employment information (Level 5)
message ProfileEmployment {
  string profession = 1;
  string employer = 2;
  string employer_address = 3;
  int32 seed = 4;          // Random seed for generation
}

// Genetic information (Level 6)
message ProfileGenetic {
  int32 seed = 1;          // Random seed for generation
  // Add other genetic fields as needed
}

// Main profile data structure
message ProfileData {
  // Top-level identifiers and metadata
  string sin_id = 1;                           // SIN (System Identification Number)
  bool active = 2;                             // Active / burned status
  SinQuality sin_quality = 3;                  // Overall quality of the SIN
  map<string, SinQuality> licenses = 4;        // Licenses associated with the SIN

  // Nested data structures for tabbed information
  ProfileBasic basic = 5;
  optional ProfileIdentity identity = 6;
  optional ProfilePhysical physical = 7;
  optional ProfileMedical medical = 8;
  optional ProfileEmployment employment = 9;
  optional ProfileGenetic genetic = 10;
}